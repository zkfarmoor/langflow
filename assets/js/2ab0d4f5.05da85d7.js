"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[1845],{4516:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=n(74848),s=n(28453);const a={},o="Simplified Run Flow",r={type:"api",id:"simplified-run-flow",title:"Simplified Run Flow",description:"",slug:"/simplified-run-flow",frontMatter:{},api:{tags:["Base"],description:'Executes a specified flow by ID.\n\nExecutes a specified flow by ID with input customization, performance enhancements through caching,\nand optional data streaming.\n\n### Parameters:\n- `db` (Session): Database session for executing queries.\n- `flow_id_or_name` (str): ID or endpoint name of the flow to run.\n- `input_request` (SimplifiedAPIRequest): Request object containing input values, types, output selection, tweaks,\n  and session ID.\n- `api_key_user` (User): User object derived from the provided API key, used for authentication.\n- `session_service` (SessionService): Service for managing flow sessions, essential for session reuse and caching.\n\n### SimplifiedAPIRequest:\n- `input_value` (Optional[str], default=""): Input value to pass to the flow.\n- `input_type` (Optional[Literal["chat", "text", "any"]], default="chat"): Type of the input value,\n  determining how the input is interpreted.\n- `output_type` (Optional[Literal["chat", "text", "any", "debug"]], default="chat"): Desired type of output,\n  affecting which components\' outputs are included in the response. If set to "debug", all outputs are returned.\n- `output_component` (Optional[str], default=None): Specific component output to retrieve. If provided,\n  only the output of the specified component is returned. This overrides the `output_type` parameter.\n- `tweaks` (Optional[Tweaks], default=None): Adjustments to the flow\'s behavior, allowing for custom execution\n  parameters.\n- `session_id` (Optional[str], default=None): An identifier for reusing session data, aiding in performance for\n  subsequent requests.\n\n\n### Tweaks\nA dictionary of tweaks to customize the flow execution.\nThe tweaks can be used to modify the flow\'s parameters and components.\nTweaks can be overridden by the input values.\nYou can use Component\'s `id` or Display Name as key to tweak a specific component\n(e.g., `{"Component Name": {"parameter_name": "value"}}`).\nYou can also use the parameter name as key to tweak all components with that parameter\n(e.g., `{"parameter_name": "value"}`).\n\n### Returns:\n- A `RunResponse` object containing the execution results, including selected (or all, based on `output_type`)\n  outputs of the flow and the session ID, facilitating result retrieval and further interactions in a session\n  context.\n\n### Raises:\n- HTTPException: 404 if the specified flow ID curl -X \'POST\' \n### Example:\n```bash\ncurl -X \'POST\'       \'http://<your_server>/run/{flow_id}\'       -H \'accept: application/json\'       -H \'Content-Type: application/json\'       -H \'x-api-key: YOU_API_KEY\'       -H \'\n  -d \'{\n        "input_value": "Sample input",\n        "input_type": "chat",\n        "output_type": "chat",\n        "tweaks": {},\n      }\'\n```\n\nThis endpoint provides a powerful interface for executing flows with enhanced flexibility and efficiency,\nsupporting a wide range of applications by allowing for dynamic input and output configuration along with\nperformance optimizations through session management and caching.',operationId:"simplified_run_flow_api_v1_run__flow_id_or_name__post",security:[{"API key query":[]},{"API key header":[]}],parameters:[{name:"flow_id_or_name",in:"path",required:!0,schema:{type:"string",title:"Flow Id Or Name"}},{name:"stream",in:"query",required:!1,schema:{type:"boolean",default:!1,title:"Stream"}},{name:"user_id",in:"query",required:!1,schema:{anyOf:[{type:"string",format:"uuid"},{type:"null"}],title:"User Id"}}],requestBody:{content:{"application/json":{schema:{anyOf:[{properties:{input_value:{anyOf:[{type:"string"},{type:"null"}],title:"Input Value",description:"The input value"},input_type:{anyOf:[{type:"string",enum:["chat","text","any"]},{type:"null"}],title:"Input Type",description:"The input type",default:"chat"},output_type:{anyOf:[{type:"string",enum:["chat","text","any","debug"]},{type:"null"}],title:"Output Type",description:"The output type",default:"chat"},output_component:{anyOf:[{type:"string"},{type:"null"}],title:"Output Component",description:"If there are multiple output components, you can specify the component to get the output from.",default:""},tweaks:{anyOf:[{additionalProperties:{anyOf:[{type:"string"},{type:"object"}]},type:"object",title:"Tweaks",description:"A dictionary of tweaks to adjust the flow's execution. Allows customizing flow behavior dynamically. All tweaks are overridden by the input values.",examples:[{"Component Name":{parameter_name:"value"},component_id:{parameter_name:"value"},parameter_name:"value"}]},{type:"null"}],description:"The tweaks"},session_id:{anyOf:[{type:"string"},{type:"null"}],title:"Session Id",description:"The session id"}},type:"object",title:"SimplifiedAPIRequest"},{type:"null"}],title:"Input Request"}}}},responses:{200:{description:"Successful Response",content:{"application/json":{schema:{properties:{outputs:{anyOf:[{items:{properties:{inputs:{type:"object",title:"Inputs"},outputs:{items:{anyOf:[{properties:{results:{anyOf:[{},{type:"null"}],title:"Results"},artifacts:{anyOf:[{},{type:"null"}],title:"Artifacts"},outputs:{anyOf:[{type:"object"},{type:"null"}],title:"Outputs"},logs:{anyOf:[{type:"object"},{type:"null"}],title:"Logs"},messages:{anyOf:[{items:{properties:{message:{anyOf:[{type:"string"},{items:{anyOf:[{type:"string"},{type:"object"}]},type:"array"}],title:"Message"},sender:{anyOf:[{type:"string"},{type:"null"}],title:"Sender",default:"Machine"},sender_name:{anyOf:[{type:"string"},{type:"null"}],title:"Sender Name",default:"AI"},session_id:{anyOf:[{type:"string"},{type:"null"}],title:"Session Id"},stream_url:{anyOf:[{type:"string"},{type:"null"}],title:"Stream Url"},component_id:{anyOf:[{type:"string"},{type:"null"}],title:"Component Id"},files:{items:{properties:{path:{type:"string",title:"Path"},name:{type:"string",title:"Name"},type:{type:"string",title:"Type"}},type:"object",required:["path","name","type"],title:"File",description:"File schema."},type:"array",title:"Files",default:[]},type:{type:"string",title:"Type"}},type:"object",required:["message","type"],title:"ChatOutputResponse",description:"Chat output response schema."},type:"array"},{type:"null"}],title:"Messages"},timedelta:{anyOf:[{type:"number"},{type:"null"}],title:"Timedelta"},duration:{anyOf:[{type:"string"},{type:"null"}],title:"Duration"},component_display_name:{anyOf:[{type:"string"},{type:"null"}],title:"Component Display Name"},component_id:{anyOf:[{type:"string"},{type:"null"}],title:"Component Id"},used_frozen_result:{anyOf:[{type:"boolean"},{type:"null"}],title:"Used Frozen Result",default:!1}},type:"object",title:"ResultData"},{type:"null"}]},type:"array",title:"Outputs"}},type:"object",title:"RunOutputs"},type:"array"},{type:"null"}],title:"Outputs",default:[]},session_id:{anyOf:[{type:"string"},{type:"null"}],title:"Session Id"}},type:"object",title:"RunResponse",description:"Run response schema."}}}},422:{description:"Validation Error",content:{"application/json":{schema:{properties:{detail:{items:{properties:{loc:{items:{anyOf:[{type:"string"},{type:"integer"}]},type:"array",title:"Location"},msg:{type:"string",title:"Message"},type:{type:"string",title:"Error Type"}},type:"object",required:["loc","msg","type"],title:"ValidationError"},type:"array",title:"Detail"}},type:"object",title:"HTTPValidationError"}}}}},method:"post",path:"/api/v1/run/{flow_id_or_name}",securitySchemes:{OAuth2PasswordBearer:{type:"oauth2",flows:{password:{scopes:{},tokenUrl:"api/v1/login"}}},"API key query":{type:"apiKey",in:"query",name:"x-api-key"},"API key header":{type:"apiKey",in:"header",name:"x-api-key"}},info:{title:"Langflow",version:"1.1.0"},postman:{name:"Simplified Run Flow",description:{content:'Executes a specified flow by ID.\n\nExecutes a specified flow by ID with input customization, performance enhancements through caching,\nand optional data streaming.\n\n### Parameters:\n- `db` (Session): Database session for executing queries.\n- `flow_id_or_name` (str): ID or endpoint name of the flow to run.\n- `input_request` (SimplifiedAPIRequest): Request object containing input values, types, output selection, tweaks,\n  and session ID.\n- `api_key_user` (User): User object derived from the provided API key, used for authentication.\n- `session_service` (SessionService): Service for managing flow sessions, essential for session reuse and caching.\n\n### SimplifiedAPIRequest:\n- `input_value` (Optional[str], default=""): Input value to pass to the flow.\n- `input_type` (Optional[Literal["chat", "text", "any"]], default="chat"): Type of the input value,\n  determining how the input is interpreted.\n- `output_type` (Optional[Literal["chat", "text", "any", "debug"]], default="chat"): Desired type of output,\n  affecting which components\' outputs are included in the response. If set to "debug", all outputs are returned.\n- `output_component` (Optional[str], default=None): Specific component output to retrieve. If provided,\n  only the output of the specified component is returned. This overrides the `output_type` parameter.\n- `tweaks` (Optional[Tweaks], default=None): Adjustments to the flow\'s behavior, allowing for custom execution\n  parameters.\n- `session_id` (Optional[str], default=None): An identifier for reusing session data, aiding in performance for\n  subsequent requests.\n\n\n### Tweaks\nA dictionary of tweaks to customize the flow execution.\nThe tweaks can be used to modify the flow\'s parameters and components.\nTweaks can be overridden by the input values.\nYou can use Component\'s `id` or Display Name as key to tweak a specific component\n(e.g., `{"Component Name": {"parameter_name": "value"}}`).\nYou can also use the parameter name as key to tweak all components with that parameter\n(e.g., `{"parameter_name": "value"}`).\n\n### Returns:\n- A `RunResponse` object containing the execution results, including selected (or all, based on `output_type`)\n  outputs of the flow and the session ID, facilitating result retrieval and further interactions in a session\n  context.\n\n### Raises:\n- HTTPException: 404 if the specified flow ID curl -X \'POST\' \n### Example:\n```bash\ncurl -X \'POST\'       \'http://<your_server>/run/{flow_id}\'       -H \'accept: application/json\'       -H \'Content-Type: application/json\'       -H \'x-api-key: YOU_API_KEY\'       -H \'\n  -d \'{\n        "input_value": "Sample input",\n        "input_type": "chat",\n        "output_type": "chat",\n        "tweaks": {},\n      }\'\n```\n\nThis endpoint provides a powerful interface for executing flows with enhanced flexibility and efficiency,\nsupporting a wide range of applications by allowing for dynamic input and output configuration along with\nperformance optimizations through session management and caching.',type:"text/plain"},url:{path:["api","v1","run",":flow_id_or_name"],host:["{{baseUrl}}"],query:[{description:{content:"",type:"text/plain"},key:"stream",value:"false"},{description:{content:"",type:"text/plain"},key:"user_id",value:"<uuid>"}],variable:[{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"flow_id_or_name"}]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "input_value": "<string>",\n    "input_type": "<string>",\n    "output_type": "<string>",\n    "output_component": "<string>",\n    "tweaks": "<object>",\n    "session_id": "<string>"\n}'},auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:!0,key:"value"},{type:"any",value:"header",key:"in"}]}}},source:"@site/openapi.json",sourceDirName:".",permalink:"/api/simplified-run-flow",previous:{title:"Get All",permalink:"/api/get-all"},next:{title:"Webhook Run Flow",permalink:"/api/webhook-run-flow"}},l=[{value:"Parameters:",id:"parameters",level:3},{value:"SimplifiedAPIRequest:",id:"simplifiedapirequest",level:3},{value:"Tweaks",id:"tweaks",level:3},{value:"Returns:",id:"returns",level:3},{value:"Raises:",id:"raises",level:3},{value:"Example:",id:"example",level:3}];function p(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"simplified-run-flow",children:"Simplified Run Flow"})}),"\n",(0,i.jsx)(t.p,{children:"Executes a specified flow by ID."}),"\n",(0,i.jsx)(t.p,{children:"Executes a specified flow by ID with input customization, performance enhancements through caching,\nand optional data streaming."}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"db"})," (Session): Database session for executing queries."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"flow_id_or_name"})," (str): ID or endpoint name of the flow to run."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"input_request"})," (SimplifiedAPIRequest): Request object containing input values, types, output selection, tweaks,\nand session ID."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"api_key_user"})," (User): User object derived from the provided API key, used for authentication."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"session_service"})," (SessionService): Service for managing flow sessions, essential for session reuse and caching."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"simplifiedapirequest",children:"SimplifiedAPIRequest:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"input_value"}),' (Optional[str], default=""): Input value to pass to the flow.']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"input_type"}),' (Optional[Literal["chat", "text", "any"]], default="chat"): Type of the input value,\ndetermining how the input is interpreted.']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"output_type"}),' (Optional[Literal["chat", "text", "any", "debug"]], default="chat"): Desired type of output,\naffecting which components\' outputs are included in the response. If set to "debug", all outputs are returned.']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"output_component"})," (Optional[str], default=None): Specific component output to retrieve. If provided,\nonly the output of the specified component is returned. This overrides the ",(0,i.jsx)(t.code,{children:"output_type"})," parameter."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"tweaks"})," (Optional[Tweaks], default=None): Adjustments to the flow's behavior, allowing for custom execution\nparameters."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"session_id"})," (Optional[str], default=None): An identifier for reusing session data, aiding in performance for\nsubsequent requests."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"tweaks",children:"Tweaks"}),"\n",(0,i.jsxs)(t.p,{children:["A dictionary of tweaks to customize the flow execution.\nThe tweaks can be used to modify the flow's parameters and components.\nTweaks can be overridden by the input values.\nYou can use Component's ",(0,i.jsx)(t.code,{children:"id"})," or Display Name as key to tweak a specific component\n(e.g., ",(0,i.jsx)(t.code,{children:'{"Component Name": {"parameter_name": "value"}}'}),").\nYou can also use the parameter name as key to tweak all components with that parameter\n(e.g., ",(0,i.jsx)(t.code,{children:'{"parameter_name": "value"}'}),")."]}),"\n",(0,i.jsx)(t.h3,{id:"returns",children:"Returns:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.code,{children:"RunResponse"})," object containing the execution results, including selected (or all, based on ",(0,i.jsx)(t.code,{children:"output_type"}),")\noutputs of the flow and the session ID, facilitating result retrieval and further interactions in a session\ncontext."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"raises",children:"Raises:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"HTTPException: 404 if the specified flow ID curl -X 'POST'"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'curl -X \'POST\'       \'http://<your_server>/run/{flow_id}\'       -H \'accept: application/json\'       -H \'Content-Type: application/json\'       -H \'x-api-key: YOU_API_KEY\'       -H \'\n  -d \'{\n        "input_value": "Sample input",\n        "input_type": "chat",\n        "output_type": "chat",\n        "tweaks": {},\n      }\'\n'})}),"\n",(0,i.jsx)(t.p,{children:"This endpoint provides a powerful interface for executing flows with enhanced flexibility and efficiency,\nsupporting a wide range of applications by allowing for dynamic input and output configuration along with\nperformance optimizations through session management and caching."}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"flow_id_or_name"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Flow Id Or Name"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"})]})})})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Query Parameters"})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"stream"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Stream"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"user_id"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" User Id"})]})})]})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Request Body "}),(0,i.jsx)("div",{})]})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("td",{children:(0,i.jsx)("span",{style:{opacity:"0.6"},children:" undefined"})})})})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"200"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t.p,{children:"Successful Response"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"outputs"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Outputs"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"session_id"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Session Id"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})})]})]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"422"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t.p,{children:"Validation Error"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"detail"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"loc"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" undefined[]"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"msg"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Message"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"type"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" Error Type"})]})})]})})]})})})]})})]})})]})]})]})}function d(e){void 0===e&&(e={});const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(96540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);