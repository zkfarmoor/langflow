"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8927],{62007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=n(74848),r=n(28453);const i={title:"Agents",sidebar_position:12,slug:"/components-agents"},d="Agent components in Langflow",l={id:"Components/components-agents",title:"Agents",description:"Agent components are used to define the behavior and capabilities of AI agents in your flow. Agents can interact with APIs, databases, and other services and use LLMs as a reasoning engine to decide which course to take in your flow.",source:"@site/docs/Components/components-agents.md",sourceDirName:"Components",slug:"/components-agents",permalink:"/components-agents",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"Agents",sidebar_position:12,slug:"/components-agents"},sidebar:"docs",previous:{title:"How to build flows with components",permalink:"/components-overview"},next:{title:"Custom Components",permalink:"/components-custom-components"}},h={},c=[{value:"Agent component",id:"agent-component",level:2},{value:"Inputs",id:"inputs",level:3},{value:"Outputs",id:"outputs",level:3},{value:"CSV Agent",id:"csv-agent",level:2},{value:"Inputs",id:"inputs-1",level:3},{value:"Outputs",id:"outputs-1",level:3},{value:"CrewAI Agent",id:"crewai-agent",level:2},{value:"Inputs",id:"inputs-2",level:3},{value:"Outputs",id:"outputs-2",level:3},{value:"Hierarchical Crew",id:"hierarchical-crew",level:2},{value:"Inputs",id:"inputs-3",level:3},{value:"Outputs",id:"outputs-3",level:3},{value:"JSON Agent",id:"json-agent",level:2},{value:"Inputs",id:"inputs-4",level:3},{value:"Outputs",id:"outputs-4",level:3},{value:"OpenAI Tools Agent",id:"openai-tools-agent",level:2},{value:"Inputs",id:"inputs-5",level:3},{value:"Outputs",id:"outputs-5",level:3},{value:"OpenAPI Agent",id:"openapi-agent",level:2},{value:"Inputs",id:"inputs-6",level:3},{value:"Outputs",id:"outputs-6",level:3},{value:"SQL Agent",id:"sql-agent",level:2},{value:"Inputs",id:"inputs-7",level:3},{value:"Outputs",id:"outputs-7",level:3},{value:"Sequential Crew",id:"sequential-crew",level:2},{value:"Inputs",id:"inputs-8",level:3},{value:"Outputs",id:"outputs-8",level:3},{value:"Sequential task agent",id:"sequential-task-agent",level:2},{value:"Inputs",id:"inputs-9",level:3},{value:"Outputs",id:"outputs-9",level:3},{value:"Tool Calling Agent",id:"tool-calling-agent",level:2},{value:"Inputs",id:"inputs-10",level:3},{value:"Outputs",id:"outputs-10",level:3},{value:"Vector Store Agent",id:"vector-store-agent",level:2},{value:"Inputs",id:"inputs-11",level:3},{value:"Outputs",id:"outputs-11",level:3},{value:"Vector Store Router Agent",id:"vector-store-router-agent",level:2},{value:"Inputs",id:"inputs-12",level:3},{value:"Outputs",id:"outputs-12",level:3},{value:"XML Agent",id:"xml-agent",level:2},{value:"Inputs",id:"inputs-13",level:3},{value:"Outputs",id:"outputs-13",level:3}];function o(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"agent-components-in-langflow",children:"Agent components in Langflow"})}),"\n",(0,s.jsx)(t.p,{children:"Agent components are used to define the behavior and capabilities of AI agents in your flow. Agents can interact with APIs, databases, and other services and use LLMs as a reasoning engine to decide which course to take in your flow."}),"\n",(0,s.jsx)(t.h2,{id:"agent-component",children:"Agent component"}),"\n",(0,s.jsx)(t.p,{children:"This component creates an agent that can use tools to answer questions and perform tasks based on given instructions."}),"\n",(0,s.jsxs)(t.p,{children:["For more information on this component, see the ",(0,s.jsx)(t.a,{href:"/agents-tool-calling-agent-component",children:"tool calling agent documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"inputs",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent_llm"}),(0,s.jsx)(t.td,{children:"Dropdown"}),(0,s.jsx)(t.td,{children:"The provider of the language model that the agent will use to generate responses."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"system_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Initial instructions and context provided to guide the agent's behavior."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List"}),(0,s.jsx)(t.td,{children:"List of tools available for the agent to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"input_value"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The input task or question for the agent to process."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"add_current_date_tool"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"If true, adds a tool to the agent that returns the current date."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"response"}),(0,s.jsx)(t.td,{children:"Message"}),(0,s.jsx)(t.td,{children:"The agent's response to the given input task."})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"csv-agent",children:"CSV Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a CSV agent from a CSV file and LLM."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-1",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"path"}),(0,s.jsx)(t.td,{children:"File"}),(0,s.jsx)(t.td,{children:"Path to the CSV file"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent_type"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Type of agent to create (zero-shot-react-description, openai-functions, or openai-tools)"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-1",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"CSV agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"crewai-agent",children:"CrewAI Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component represents an Agent of CrewAI, allowing for the creation of specialized AI agents with defined roles, goals, and capabilities within a crew."}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see the ",(0,s.jsx)(t.a,{href:"https://docs.crewai.com/core-concepts/Agents/",children:"CrewAI documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"inputs-2",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"role"}),(0,s.jsx)(t.td,{children:"Role"}),(0,s.jsx)(t.td,{children:"The role of the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"goal"}),(0,s.jsx)(t.td,{children:"Goal"}),(0,s.jsx)(t.td,{children:"The objective of the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"backstory"}),(0,s.jsx)(t.td,{children:"Backstory"}),(0,s.jsx)(t.td,{children:"The backstory of the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"Tools"}),(0,s.jsx)(t.td,{children:"Tools at agent's disposal"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"Language Model"}),(0,s.jsx)(t.td,{children:"Language model that will run the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"memory"}),(0,s.jsx)(t.td,{children:"Memory"}),(0,s.jsx)(t.td,{children:"Whether the agent should have memory or not"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Verbose"}),(0,s.jsx)(t.td,{children:"Enables verbose output"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"allow_delegation"}),(0,s.jsx)(t.td,{children:"Allow Delegation"}),(0,s.jsx)(t.td,{children:"Whether the agent is allowed to delegate tasks to other agents"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"allow_code_execution"}),(0,s.jsx)(t.td,{children:"Allow Code Execution"}),(0,s.jsx)(t.td,{children:"Whether the agent is allowed to execute code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"kwargs"}),(0,s.jsx)(t.td,{children:"kwargs"}),(0,s.jsx)(t.td,{children:"Additional keyword arguments for the agent"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-2",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"output"}),(0,s.jsx)(t.td,{children:"Agent"}),(0,s.jsx)(t.td,{children:"The constructed CrewAI Agent object"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"hierarchical-crew",children:"Hierarchical Crew"}),"\n",(0,s.jsx)(t.p,{children:"This component represents a group of agents, managing how they should collaborate and the tasks they should perform in a hierarchical structure. This component allows for the creation of a crew with a manager overseeing the task execution."}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see the ",(0,s.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Hierarchical/",children:"CrewAI documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"inputs-3",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agents"}),(0,s.jsx)(t.td,{children:"Agents"}),(0,s.jsx)(t.td,{children:"List of Agent objects representing the crew members"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tasks"}),(0,s.jsx)(t.td,{children:"Tasks"}),(0,s.jsx)(t.td,{children:"List of HierarchicalTask objects representing the tasks to be executed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"manager_llm"}),(0,s.jsx)(t.td,{children:"Manager LLM"}),(0,s.jsx)(t.td,{children:"Language model for the manager agent (optional)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"manager_agent"}),(0,s.jsx)(t.td,{children:"Manager Agent"}),(0,s.jsx)(t.td,{children:"Specific agent to act as the manager (optional)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Verbose"}),(0,s.jsx)(t.td,{children:"Enables verbose output for detailed logging"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"memory"}),(0,s.jsx)(t.td,{children:"Memory"}),(0,s.jsx)(t.td,{children:"Specifies the memory configuration for the crew"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"use_cache"}),(0,s.jsx)(t.td,{children:"Use Cache"}),(0,s.jsx)(t.td,{children:"Enables caching of results"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_rpm"}),(0,s.jsx)(t.td,{children:"Max RPM"}),(0,s.jsx)(t.td,{children:"Sets the maximum requests per minute"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"share_crew"}),(0,s.jsx)(t.td,{children:"Share Crew"}),(0,s.jsx)(t.td,{children:"Determines if the crew information is shared among agents"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"function_calling_llm"}),(0,s.jsx)(t.td,{children:"Function Calling LLM"}),(0,s.jsx)(t.td,{children:"Specifies the language model for function calling"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-3",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"crew"}),(0,s.jsx)(t.td,{children:"Crew"}),(0,s.jsx)(t.td,{children:"The constructed Crew object with hierarchical task execution"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"json-agent",children:"JSON Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a JSON agent from a JSON or YAML file and an LLM."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-4",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"path"}),(0,s.jsx)(t.td,{children:"File"}),(0,s.jsx)(t.td,{children:"Path to the JSON or YAML file"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-4",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"JSON agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"openai-tools-agent",children:"OpenAI Tools Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates an OpenAI Tools Agent using LangChain."}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/v0.1/docs/modules/agents/agent_types/openai_tools/",children:"LangChain documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"inputs-5",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent (must be tool-enabled)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"system_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"System prompt for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"User prompt template (must contain 'input' key)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"chat_history"}),(0,s.jsx)(t.td,{children:"List[Data]"}),(0,s.jsx)(t.td,{children:"Optional chat history for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List[Tool]"}),(0,s.jsx)(t.td,{children:"List of tools available to the agent"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-5",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"OpenAI Tools Agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"openapi-agent",children:"OpenAPI Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates an OpenAPI Agent to interact with APIs defined by OpenAPI specifications."}),"\n",(0,s.jsx)(t.p,{children:"For more information, see the LangChain documentation on OpenAPI Agents."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-6",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"path"}),(0,s.jsx)(t.td,{children:"File"}),(0,s.jsx)(t.td,{children:"Path to the OpenAPI specification file (JSON or YAML)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"allow_dangerous_requests"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Whether to allow potentially dangerous API requests"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-6",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"OpenAPI Agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"sql-agent",children:"SQL Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a SQL Agent to interact with SQL databases."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-7",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"database_uri"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"URI of the SQL database to connect to"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"extra_tools"}),(0,s.jsx)(t.td,{children:"List[Tool]"}),(0,s.jsx)(t.td,{children:"Additional tools to provide to the agent (optional)"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-7",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"SQL Agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"sequential-crew",children:"Sequential Crew"}),"\n",(0,s.jsx)(t.p,{children:"This component represents a group of agents with tasks that are executed sequentially. This component allows for the creation of a crew that performs tasks in a specific order."}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see the ",(0,s.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Sequential/",children:"CrewAI documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"inputs-8",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tasks"}),(0,s.jsx)(t.td,{children:"Tasks"}),(0,s.jsx)(t.td,{children:"List of SequentialTask objects representing the tasks to be executed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Verbose"}),(0,s.jsx)(t.td,{children:"Enables verbose output for detailed logging"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"memory"}),(0,s.jsx)(t.td,{children:"Memory"}),(0,s.jsx)(t.td,{children:"Specifies the memory configuration for the crew"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"use_cache"}),(0,s.jsx)(t.td,{children:"Use Cache"}),(0,s.jsx)(t.td,{children:"Enables caching of results"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_rpm"}),(0,s.jsx)(t.td,{children:"Max RPM"}),(0,s.jsx)(t.td,{children:"Sets the maximum requests per minute"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"share_crew"}),(0,s.jsx)(t.td,{children:"Share Crew"}),(0,s.jsx)(t.td,{children:"Determines if the crew information is shared among agents"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"function_calling_llm"}),(0,s.jsx)(t.td,{children:"Function Calling LLM"}),(0,s.jsx)(t.td,{children:"Specifies the language model for function calling"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-8",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"crew"}),(0,s.jsx)(t.td,{children:"Crew"}),(0,s.jsx)(t.td,{children:"The constructed Crew object with sequential task execution"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"sequential-task-agent",children:"Sequential task agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a CrewAI Task and its associated Agent, allowing for the definition of sequential tasks with specific agent roles and capabilities."}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see the ",(0,s.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Sequential/",children:"CrewAI documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"inputs-9",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"role"}),(0,s.jsx)(t.td,{children:"Role"}),(0,s.jsx)(t.td,{children:"The role of the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"goal"}),(0,s.jsx)(t.td,{children:"Goal"}),(0,s.jsx)(t.td,{children:"The objective of the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"backstory"}),(0,s.jsx)(t.td,{children:"Backstory"}),(0,s.jsx)(t.td,{children:"The backstory of the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"Tools"}),(0,s.jsx)(t.td,{children:"Tools at agent's disposal"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"Language Model"}),(0,s.jsx)(t.td,{children:"Language model that will run the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"memory"}),(0,s.jsx)(t.td,{children:"Memory"}),(0,s.jsx)(t.td,{children:"Whether the agent should have memory or not"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Verbose"}),(0,s.jsx)(t.td,{children:"Enables verbose output"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"allow_delegation"}),(0,s.jsx)(t.td,{children:"Allow Delegation"}),(0,s.jsx)(t.td,{children:"Whether the agent is allowed to delegate tasks to other agents"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"allow_code_execution"}),(0,s.jsx)(t.td,{children:"Allow Code Execution"}),(0,s.jsx)(t.td,{children:"Whether the agent is allowed to execute code"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent_kwargs"}),(0,s.jsx)(t.td,{children:"Agent kwargs"}),(0,s.jsx)(t.td,{children:"Additional kwargs for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"task_description"}),(0,s.jsx)(t.td,{children:"Task Description"}),(0,s.jsx)(t.td,{children:"Descriptive text detailing task's purpose and execution"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"expected_output"}),(0,s.jsx)(t.td,{children:"Expected Task Output"}),(0,s.jsx)(t.td,{children:"Clear definition of expected task outcome"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"async_execution"}),(0,s.jsx)(t.td,{children:"Async Execution"}),(0,s.jsx)(t.td,{children:"Boolean flag indicating asynchronous task execution"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"previous_task"}),(0,s.jsx)(t.td,{children:"Previous Task"}),(0,s.jsx)(t.td,{children:"The previous task in the sequence (for chaining)"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-9",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"task_output"}),(0,s.jsx)(t.td,{children:"Sequential Task"}),(0,s.jsx)(t.td,{children:"List of SequentialTask objects representing the created task(s)"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"tool-calling-agent",children:"Tool Calling Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a Tool Calling Agent using LangChain."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-10",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"system_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"System prompt for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"User prompt template (must contain 'input' key)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"chat_history"}),(0,s.jsx)(t.td,{children:"List[Data]"}),(0,s.jsx)(t.td,{children:"Optional chat history for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List[Tool]"}),(0,s.jsx)(t.td,{children:"List of tools available to the agent"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-10",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Tool Calling Agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"vector-store-agent",children:"Vector Store Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a Vector Store Agent using LangChain."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-11",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"vectorstore"}),(0,s.jsx)(t.td,{children:"VectorStoreInfo"}),(0,s.jsx)(t.td,{children:"Vector store information for the agent to use"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-11",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Vector Store Agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"vector-store-router-agent",children:"Vector Store Router Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates a Vector Store Router Agent using LangChain."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-12",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"vectorstores"}),(0,s.jsx)(t.td,{children:"List[VectorStoreInfo]"}),(0,s.jsx)(t.td,{children:"List of vector store information for the agent to route between"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-12",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Vector Store Router Agent instance"})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"xml-agent",children:"XML Agent"}),"\n",(0,s.jsx)(t.p,{children:"This component creates an XML Agent using LangChain."}),"\n",(0,s.jsx)(t.p,{children:"The agent uses XML formatting for tool instructions to the Language Model."}),"\n",(0,s.jsx)(t.h3,{id:"inputs-13",children:"Inputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Language model to use for the agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Custom prompt template for the agent (includes XML formatting instructions)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List[Tool]"}),(0,s.jsx)(t.td,{children:"List of tools available to the agent"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"outputs-13",children:"Outputs"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"XML Agent instance"})]})})]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>l});var s=n(96540);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);